{"version":3,"sources":["webpack:///../src/server.js?22b7"],"names":[],"mappings":"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","file":"0.51f8da4b72cd47bfa1b9.hot-update.js","sourcesContent":["import babelPolyfill from \"babel-polyfill\";\r\nimport { Server } from \"hapi\";\r\nimport h2o2 from \"h2o2\";\r\nimport inert from \"inert\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/server\";\r\nimport { RouterContext, match } from \"react-router\";\r\nimport configureStore from \"./store.js\";\r\nimport App from './containers/App';\r\nimport { Provider } from 'react-redux';\r\nimport routesContainer from \"./routes\";\r\nimport url from \"url\";\r\nlet routes = routesContainer;\r\n\r\n/**\r\n * Create Redux store, and get intitial state.\r\n */\r\nconst store = configureStore();\r\nconst initialState = store.getState();\r\nconsole.log(initialState)\r\n/**\r\n * Start Hapi server\r\n */\r\nvar envset = {\r\n  production: process.env.NODE_ENV === 'production'\r\n};\r\n\r\nconst hostname = envset.production ? (process.env.HOSTNAME || process['env'].HOSTNAME) : \"localhost\";\r\nvar port = envset.production ? (process.env.PORT || process['env'].PORT) : 8000\r\nconst server = new Server();\r\n\r\nserver.connection({host: hostname, port: port});\r\n\r\nserver.register(\r\n\t[\r\n\t\th2o2,\r\n\t\tinert,\r\n\t\t// WebpackPlugin\r\n\t],\r\n\t(err) => {\r\n\tif (err) {\r\n\t\tthrow err;\r\n\t}\r\n\r\n\tserver.start(() => {\r\n\t\tconsole.info(\"==> âœ…  Server is listening\");\r\n\t\tconsole.info(\"==> ðŸŒŽ  Go to \" + server.info.uri.toLowerCase());\r\n\t});\r\n});\r\n\r\n/**\r\n * Attempt to serve static requests from the public folder.\r\n */\r\nserver.route({\r\n\tmethod:  \"GET\",\r\n\tpath:    \"/{params*}\",\r\n\thandler: {\r\n\t\tfile: (request) => \"static\" + request.path\r\n\t}\r\n});\r\n\r\nserver.route({\r\n    method: 'GET',\r\n    path:'/hello',\r\n    handler: function (request, reply) {\r\n       var data = {\r\n         message: \"hello world\"\r\n       }\r\n        return reply(data);\r\n    }\r\n});\r\n/**\r\n * Catch dynamic requests here to fire-up React Router.\r\n */\r\nserver.ext(\"onPreResponse\", (request, reply) => {\r\n\tif (typeof request.response.statusCode !== \"undefined\") {\r\n    return reply.continue();\r\n  }\r\n\r\n  match({routes, location: request.path}, (error, redirectLocation, renderProps) => {\r\n    if (redirectLocation) {\r\n      reply.redirect(redirectLocation.pathname + redirectLocation.search);\r\n      return;\r\n    }\r\n    if (error || !renderProps) {\r\n      reply.continue();\r\n      return;\r\n    }\r\n\tconst reactString = ReactDOM.renderToString(\r\n\t\t<Provider store={store}>\r\n      <RouterContext {...renderProps} />\r\n\t\t</Provider>\r\n\t);\r\n\tconst webserver = __PRODUCTION__ ? \"\" : `//${hostname}:8080`;\r\n\tlet output = (\r\n\t\t`<!doctype html>\r\n\t\t<html lang=\"en-us\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"utf-8\">\r\n\t\t\t\t<title></title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<div id=\"react-root\">${reactString}</div>\r\n\t\t\t\t<script>\r\n\t\t\t\t\twindow.__INITIAL_STATE__ = ${JSON.stringify(initialState)}\r\n\t\t\t\t</script>\r\n\t\t\t\t<script src=${webserver}/dist/client.js></script>\r\n\t\t\t</body>\r\n\t\t</html>`\r\n\t\t);\r\n\treply(output);\r\n  });\r\n});\r\n\r\nif (__DEV__) {\r\n\tif (module.hot) {\r\n\t\tconsole.log(\"[HMR] Waiting for server-side updates\");\r\n\r\n\t\tmodule.hot.accept(\"./routes\", () => {\r\n\t\t\troutes = require(\"./routes\");\r\n\t\t});\r\n\r\n\t\tmodule.hot.addStatusHandler((status) => {\r\n\t\t\tif (status === \"abort\") {\r\n\t\t\t\tsetTimeout(() => process.exit(0), 0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/server.js\n **/"],"sourceRoot":""}