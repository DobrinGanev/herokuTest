{"version":3,"sources":["webpack:///../src/containers/StargazersContainer.js?d956"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;;;KAGM,mB;;;;;;;;;;;;;;kNAEL,kB,GAAqB,YAAM;AAC1B;;;AAGA,aAAK,KAAL,CAAW,QAAX,CAAoB,sCAApB;AACA;;;AAGA,aAAK,cAAL;AACA,aAAK,KAAL,CAAW,QAAX,CAAoB,oCAApB;AACG,M,QAED,kB,GAAqB,YAAM;AAAA,yBACK,MAAK,KADV;AAAA,WACnB,UADmB,eACnB,UADmB;AAAA,WACP,QADO,eACP,QADO;AAE1B;;;;AAGA,WAAG,WAAW,QAAX,GAAsB,CAAtB,IAA2B,WAAW,YAAX,GAA0B,CAArD,IAA0D,WAAW,SAAX,KAAyB,IAAtF,EAA2F;AAC1F,eAAK,cAAL;AACA;AACD,M,QAKD,c,GAAiB,YAAM;AAAA,0BACS,MAAK,KADd;AAAA,WACf,UADe,gBACf,UADe;AAAA,WACH,QADG,gBACH,QADG;;AAEtB,gBAAS,mCAAW,WAAW,QAAtB,EAAgC,WAAW,YAA3C,CAAT;AACA,M;;;AAND;;;;;;;;;AAQA;;;8BAGS;AACR,cACC;AAAA;AAAA;AACC,wDAAO,OAAO;AACf,2BAAc;AACX,uBAAQ,CADG;AAEX,wBAAS;AAFE,cADC;AAKd,wBAAW;AACV,2BAAY;AADF;;AALG,YAAd,GADD;AAWE,cAAK,KAAL,CAAW;AAXb,QADD;AAeA;;;;;;AAGL;;;;;AAGA,uBAAsB,sBAAO,mBAAP,CAAtB;;AAEA;;;mBAGe,yBACb;AAAA,UAAU,EAAE,YAAY,MAAM,UAApB,EAAV;AAAA,EADa,EAEb,mBAFa,C","file":"0.c8df3b0b6f68de81be0a.hot-update.js","sourcesContent":["import React, {Component} from 'react';\r\nimport fetch from 'isomorphic-fetch';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUsers, requestUsers, helloWorld } from '../actions/StargazersActions';\r\nimport Radium, { Style } from 'radium';\r\n\r\n\r\nclass StargazersContainer extends Component {\r\n\r\n\tcomponentWillMount = () => {\r\n\t\t/**\r\n\t\t * Start loading.\r\n\t\t */\r\n\t\tthis.props.dispatch(requestUsers());\r\n\t\t/**\r\n\t\t * Start recursive loading.\r\n\t\t */\r\n\t\tthis.recursiveFetch();\r\n\t\tthis.props.dispatch(helloWorld());\r\n    };\r\n\r\n    componentDidUpdate = () => {\r\n    \tconst {stargazers, dispatch} = this.props;\r\n    \t/**\r\n    \t * Recursive fetch everytime component updates.\r\n    \t */\r\n    \tif(stargazers.nextPage > 1 && stargazers.pagesToFetch > 0 && stargazers.isLoading === true){\r\n    \t\tthis.recursiveFetch();\r\n    \t}\r\n    };\r\n\r\n    /**\r\n     * Function that dispatches the fetch action.\r\n     */\r\n    recursiveFetch = () => {\r\n    \tconst {stargazers, dispatch} = this.props;\r\n    \tdispatch(fetchUsers(stargazers.nextPage, stargazers.pagesToFetch));\r\n    };\r\n\r\n    /**\r\n     * Render child routes and Radium's Style component, for css-like global styles.\r\n     */\r\n    render() {\r\n    \treturn (\r\n    \t\t<div>\r\n    \t\t\t<Style rules={{\r\n\t\t\t\t\t\t'body, html': {\r\n\t\t\t    \t\tmargin: 0,\r\n\t\t\t    \t\tpadding: 0\r\n\t\t\t  \t\t},\r\n\t\t\t  \t\t'.active': {\r\n\t\t\t  \t\t\tfontWeight: 900\r\n\t\t\t  \t\t}\r\n\r\n\t\t\t\t}} />\r\n    \t\t\t{this.props.children}\r\n    \t\t</div>\r\n    \t)\r\n    };\r\n}\r\n\r\n/**\r\n * Radium connect.\r\n */\r\nStargazersContainer = Radium(StargazersContainer);\r\n\r\n/**\r\n * Redux connect.\r\n */\r\nexport default connect(\r\n  state => ({ stargazers: state.stargazers })\r\n)(StargazersContainer)\r\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/containers/StargazersContainer.js\n **/"],"sourceRoot":""}