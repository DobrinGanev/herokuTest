{"version":3,"sources":["webpack:///../src/server.js?22b7"],"names":[],"mappings":"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","file":"0.0266ff0c1ee7ee8ab2aa.hot-update.js","sourcesContent":["import babelPolyfill from \"babel-polyfill\";\r\nimport {\r\n\tServer\r\n} from \"hapi\";\r\nimport h2o2 from \"h2o2\";\r\nimport inert from \"inert\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/server\";\r\nimport {\r\n\tRouterContext,\r\n\tmatch\r\n} from \"react-router\";\r\nimport configureStore from \"./store.js\";\r\nimport RadiumContainer from './containers/RadiumContainer';\r\nimport {\r\n\tProvider\r\n} from 'react-redux';\r\nimport routesContainer from \"./routes\";\r\nimport url from \"url\";\r\nlet routes = routesContainer;\r\n\r\n/**\r\n * Create Redux store, and get intitial state.\r\n */\r\nconst store = configureStore();\r\nconst initialState = store.getState();\r\n/**\r\n * Start Hapi server\r\n */\r\nvar envset = {\r\n\tproduction: process.env.NODE_ENV === 'production'\r\n};\r\n\r\nconst hostname = envset.production ? (process.env.HOSTNAME || process['env'].HOSTNAME) : \"localhost\";\r\nvar port = envset.production ? (process.env.PORT || process['env'].PORT) : 8000\r\nconst server = new Server();\r\n\r\nserver.connection({\r\n\thost: hostname,\r\n\tport: port\r\n});\r\n\r\nserver.register(\r\n\t[\r\n\t\th2o2,\r\n\t\tinert,\r\n\t\t// WebpackPlugin\r\n\t],\r\n\t(err) => {\r\n\t\tif (err) {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\r\n\t\tserver.start(() => {\r\n\t\t\tconsole.info(\"==> âœ…  Server is listening\");\r\n\t\t\tconsole.info(\"==> ðŸŒŽ  Go to \" + server.info.uri.toLowerCase());\r\n\t\t});\r\n\t});\r\n\r\n/**\r\n * Attempt to serve static requests from the public folder.\r\n */\r\nserver.route({\r\n\tmethod: \"GET\",\r\n\tpath: \"/{params*}\",\r\n\thandler: {\r\n\t\tfile: (request) => \"static\" + request.path\r\n\t}\r\n});\r\n\r\n/**\r\n * Endpoint that proxies all GitHub API requests to https://api.github.com.\r\n */\r\nserver.route({\r\n\tmethod: \"GET\",\r\n\tpath: \"/api/github/{path*}\",\r\n\thandler: {\r\n\t\tproxy: {\r\n\t\t\tpassThrough: true,\r\n\t\t\tmapUri(request, callback) {\r\n\t\t\t\tcallback(null, url.format({\r\n\t\t\t\t\tprotocol: \"https\",\r\n\t\t\t\t\thost: \"api.github.com\",\r\n\t\t\t\t\tpathname: request.params.path,\r\n\t\t\t\t\tquery: request.query\r\n\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tonResponse(err, res, request, reply, settings, ttl) {\r\n\t\t\t\treply(res);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\n// //test get\r\n// server.route({\r\n// \tmethod: \"GET\",\r\n// \tpath: \"/helloworld\",\r\n// \thandler: function(request, reply) {\r\n// \t\treturn reply('hello world');\r\n// \t}\r\n// });\r\n\r\n\r\n/**\r\n * Catch dynamic requests here to fire-up React Router.\r\n */\r\nserver.ext(\"onPreResponse\", (request, reply) => {\r\n\tif (typeof request.response.statusCode !== \"undefined\") {\r\n\t\treturn reply.continue();\r\n\t}\r\n\r\n\tmatch({\r\n\t\troutes,\r\n\t\tlocation: request.path\r\n\t}, (error, redirectLocation, renderProps) => {\r\n\t\tif (redirectLocation) {\r\n\t\t\treply.redirect(redirectLocation.pathname + redirectLocation.search);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (error || !renderProps) {\r\n\t\t\treply.continue();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst reactString = ReactDOM.renderToString( < Provider store = {\r\n\t\t\t\tstore\r\n\t\t\t} >\r\n\t\t\t< RadiumContainer radiumConfig = {\r\n\t\t\t\t{\r\n\t\t\t\t\tuserAgent: request.headers['user-agent']\r\n\t\t\t\t}\r\n\t\t\t} >\r\n\t\t\t< RouterContext {...renderProps\r\n\t\t\t}\r\n\t\t\t/> < /RadiumContainer> < /Provider>\r\n\t\t);\r\n\t\tconst webserver = __PRODUCTION__ ? \"\" : `//${hostname}:8080`;\r\n\t\tlet output = (\r\n\t\t\t`<!doctype html>\r\n\t\t<html lang=\"en-us\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"utf-8\">\r\n\t\t\t\t<title>Hapi Universal Redux</title>\r\n\t\t\t\t<link rel=\"shortcut icon\" href=\"/favicon.ico\">\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<div id=\"react-root\">${reactString}</div>\r\n\t\t\t\t<script>\r\n\t\t\t\t\twindow.__INITIAL_STATE__ = ${JSON.stringify(initialState)}\r\n\t\t\t\t\twindow.__UA__ = ${JSON.stringify(request.headers['user-agent'])}\r\n\t\t\t\t</script>\r\n\t\t\t\t<script src=${webserver}/dist/client.js></script>\r\n\t\t\t</body>\r\n\t\t</html>`\r\n\t\t);\r\n\t\treply(output);\r\n\t});\r\n});\r\n\r\nif (__DEV__) {\r\n\tif (module.hot) {\r\n\t\tconsole.log(\"[HMR] Waiting for server-side updates\");\r\n\r\n\t\tmodule.hot.accept(\"./routes\", () => {\r\n\t\t\troutes = require(\"./routes\");\r\n\t\t});\r\n\r\n\t\tmodule.hot.addStatusHandler((status) => {\r\n\t\t\tif (status === \"abort\") {\r\n\t\t\t\tsetTimeout(() => process.exit(0), 0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/server.js\n **/"],"sourceRoot":""}