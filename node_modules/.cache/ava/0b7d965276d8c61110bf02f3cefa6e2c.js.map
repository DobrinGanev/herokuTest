{"version":3,"sources":["apiCaller.spec.js"],"names":[],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,mBAAK,wBAAL,EAA+B,aAAK;AAClC,MAAM,QAAQ,EAAE,KAAK,KAAP,EAAd;AACA,0CACG,GADH,CACO,MADP,EAEG,KAFH,CAES,GAFT,EAEc,KAFd;AAGA,SAAO,yBAAQ,KAAR,EAAe,IAAf,CAAoB,oBAAY;AAAA;AAAA;;AACrC,MAAE,SAAF,uBAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAsB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAFM,CAAP;AAGD,CARD;;AAUA,mBAAK,gBAAL,EAAuB,aAAK;AAC1B,MAAM,OAAO,EAAE,IAAI,CAAN,EAAb;AACA,MAAM,QAAQ,EAAE,KAAK,KAAP,EAAd;AACA,0CACG,IADH,CACQ,MADR,EACgB,IADhB,EAEG,KAFH,CAES,GAFT,EAEc,KAFd;AAGA,SAAO,yBAAQ,KAAR,EAAe,MAAf,EAAuB,IAAvB,EAA6B,IAA7B,CAAkC,oBAAY;AAAA;AAAA;;AACnD,MAAE,SAAF,yBAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAsB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAFM,CAAP;AAGD,CATD;;AAWA,mBAAK,mBAAL,EAA0B,aAAK;AAC7B,MAAM,QAAQ,EAAE,SAAS,aAAX,EAAd;AACA,0CACG,GADH,CACO,aADP,EAEG,KAFH,CAES,GAFT,EAEc,KAFd;AAGA,SAAO,yBAAQ,YAAR,EAAsB,IAAtB,CAA2B,iBAAS;AAAA;AAAA;;AACzC,MAAE,SAAF,yBAAY,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAmB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAFM,CAAP;AAGD,CARD","file":"apiCaller.spec.js","sourcesContent":["import test from 'ava';\nimport callApi, { API_URL } from '../apiCaller';\nimport nock from 'nock';\n\ntest('method defaults to GET', t => {\n  const reply = { foo: 'bar' };\n  nock(API_URL)\n    .get('/foo')\n    .reply(200, reply);\n  return callApi('foo').then(response => {\n    t.deepEqual(response, reply);\n  });\n});\n\ntest('sends the body', t => {\n  const body = { id: 5 };\n  const reply = { foo: 'bar' };\n  nock(API_URL)\n    .post('/foo', body)\n    .reply(200, reply);\n  return callApi('foo', 'post', body).then(response => {\n    t.deepEqual(response, reply);\n  });\n});\n\ntest('returns the error', t => {\n  const reply = { message: 'Errrrrrrrrr' };\n  nock(API_URL)\n    .get('/send_error')\n    .reply(500, reply);\n  return callApi('send_error').then(error => {\n    t.deepEqual(error, reply);\n  });\n});\n"]}