{"version":3,"sources":["apiCaller.spec.js"],"names":[],"mappings":";;;;;;;;AACA;;;kBAWwB,O;;AAZxB;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;AAGA,IAAM,UAAU,uBAAhB;;AAEe,SAAS,OAAT,GAAmB;AAChC,SAAO,+BAAM,6BAAN,EACC,IADD,CACM,UAAS,QAAT,EAAmB;AACxB,QAAI,SAAS,MAAT,IAAmB,GAAvB,EAA4B;AACxB,YAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACH;AACD;AACH,GANE,EAMA,IANA,CAMK,UAAS,IAAT,EAAe;AACrB,WAAO,IAAP;AACD,GARE,CAAP;AASD;;AAED,mBAAK,wBAAL,EAA+B,aAAK;AAClC,MAAI,QAAQ;AACV,aAAS;AADC,GAAZ;;AAIA,MAAI,MAAM,oBAAK,uBAAL,EACC,GADD,CACK,QADL,EAEC,KAFD,CAEO,GAFP,EAEW,KAFX,CAAV;;AAIM,SAAQ,QAAQ,EAAR,EACI,IADJ,CACS,UAAS,MAAT,EAAiB;AAAA;AAAA;;AACtB,MAAE,SAAF,uBAAY,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAmB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,GAHD,CAAR;;AAKN;AACA;AACA;AACA;AACA;;AAGD,CArBD;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"apiCaller.spec.js","sourcesContent":["import test from 'ava';\n// import callApi, { API_URL } from '../apiCaller';\nimport nock from 'nock';\nimport fetch from 'isomorphic-fetch';\nimport Config from '.././config';\nimport http from \"http\";\n\n// /src/util/__tests__/apiCaller.spec.js\n\n\nconst API_URL = 'http://localhost:8000';\n\nexport default function callApi() {\n  return fetch('http://localhost:8000/test/')\n         .then(function(response) {\n          if (response.status >= 400) {\n              throw new Error(\"Bad response from server\");\n          }\n          // return response.json();\n      }).then(function(data) {\n        return data;\n      });\n}\n\ntest('method defaults to GET', t => {\n  var reply = {\n    message: \"hello world from server\"\n  }\n\n  var api = nock('http://localhost:8000')\n            .get(\"/test/\")\n            .reply(200,reply);\n\n        return  callApi({\n                 }).then(function(result) {\n                    t.deepEqual(reply, result);\n                });\n\n  //     return http.get(\"http://javascriptplayground.com/test/\", function(resp) {\n  //       resp.on(\"end\", function(data) {\n  //       t.deepEqual(reply, data);\n  //   });\n  // });\n\n\n});\n\n// test('sends the body', t => {\n//   const body = { id: 5 };\n//   const reply = { foo: 'bar' };\n//   nock(API_URL)\n//     .post('/foo', body)\n//     .reply(200, reply);\n//   return callApi('foo', 'post', body).then(response => {\n//     t.deepEqual(response, reply);\n//   });\n// });\n//\n// test('returns the error', t => {\n//   const reply = { message: 'Errrrrrrrrr' };\n//   nock(API_URL)\n//     .get('/send_error')\n//     .reply(500, reply);\n//   return callApi('send_error').then(error => {\n//     t.deepEqual(error, reply);\n//   });\n// });\n"]}