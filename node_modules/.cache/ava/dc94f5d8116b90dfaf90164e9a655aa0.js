'use strict';

var _powerAssertVisitorKeys = '{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareVariable":["id"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"BindExpression":["object","callee"],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}',
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { return { powerAssertContext: { value: value, events: this.captured }, source: source }; }; return PowerAssertRecorder; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _enzyme = require('enzyme');

var _Foo = require('./Foo');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('renders the footer properly', function (t) {
  var _rec = new _powerAssertRecorder(),
      _rec2 = new _powerAssertRecorder();

  var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Foo.Foo, null));

  t.is(_rec._expr(_rec._capt(_rec._capt(_rec._capt(wrapper, 'arguments/0/object/callee/object').find('p'), 'arguments/0/object').length, 'arguments/0'), {
    content: 't.is(wrapper.find(\'p\').length, 2)',
    filepath: 'src/components/__tests__/Bar.spec.js',
    line: 11,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"MemberExpression","object":{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"wrapper","range":[5,12]},"property":{"type":"Identifier","name":"find","range":[13,17]},"computed":false,"range":[5,17]},"arguments":[{"type":"StringLiteral","value":"p","range":[18,21]}],"range":[5,22]},"property":{"type":"Identifier","name":"length","range":[23,29]},"computed":false,"range":[5,29]},{"type":"NumericLiteral","value":2,"range":[31,32]}],"range":[0,33]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"name"},"value":"wrapper","range":[5,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"find","range":[13,17]},{"type":{"label":"("},"range":[17,18]},{"type":{"label":"string"},"value":"p","range":[18,21]},{"type":{"label":")"},"range":[21,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"length","range":[23,29]},{"type":{"label":","},"range":[29,30]},{"type":{"label":"num"},"value":2,"range":[31,32]},{"type":{"label":")"},"range":[32,33]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), 2);
  t.is(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(wrapper, 'arguments/0/callee/object/callee/object/callee/object').find('p'), 'arguments/0/callee/object/callee/object').first(), 'arguments/0/callee/object').text(), 'arguments/0'), {
    content: 't.is(wrapper.find(\'p\').first().text(), \'© 2016 · Hashnode · LinearBytes Inc.\')',
    filepath: 'src/components/__tests__/Bar.spec.js',
    line: 12,
    ast: '{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"is","range":[2,4]},"computed":false,"range":[0,4]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"wrapper","range":[5,12]},"property":{"type":"Identifier","name":"find","range":[13,17]},"computed":false,"range":[5,17]},"arguments":[{"type":"StringLiteral","value":"p","range":[18,21]}],"range":[5,22]},"property":{"type":"Identifier","name":"first","range":[23,28]},"computed":false,"range":[5,28]},"arguments":[],"range":[5,30]},"property":{"type":"Identifier","name":"text","range":[31,35]},"computed":false,"range":[5,35]},"arguments":[],"range":[5,37]},{"type":"StringLiteral","value":"© 2016 · Hashnode · LinearBytes Inc.","range":[39,77]}],"range":[0,78]}',
    tokens: '[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"is","range":[2,4]},{"type":{"label":"("},"range":[4,5]},{"type":{"label":"name"},"value":"wrapper","range":[5,12]},{"type":{"label":"."},"range":[12,13]},{"type":{"label":"name"},"value":"find","range":[13,17]},{"type":{"label":"("},"range":[17,18]},{"type":{"label":"string"},"value":"p","range":[18,21]},{"type":{"label":")"},"range":[21,22]},{"type":{"label":"."},"range":[22,23]},{"type":{"label":"name"},"value":"first","range":[23,28]},{"type":{"label":"("},"range":[28,29]},{"type":{"label":")"},"range":[29,30]},{"type":{"label":"."},"range":[30,31]},{"type":{"label":"name"},"value":"text","range":[31,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":")"},"range":[36,37]},{"type":{"label":","},"range":[37,38]},{"type":{"label":"string"},"value":"© 2016 · Hashnode · LinearBytes Inc.","range":[39,77]},{"type":{"label":")"},"range":[77,78]}]',
    visitorKeys: _powerAssertVisitorKeys
  }), '© 2016 · Hashnode · LinearBytes Inc.');
});
//# sourceMappingURL=../../../node_modules/.cache/ava/dc94f5d8116b90dfaf90164e9a655aa0.js.map