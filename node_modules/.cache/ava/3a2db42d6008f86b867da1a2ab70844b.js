'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = callApi;

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _nock = require('nock');

var _nock2 = _interopRequireDefault(_nock);

var _isomorphicFetch = require('isomorphic-fetch');

var _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);

var _config = require('.././config');

var _config2 = _interopRequireDefault(_config);

var _http = require('http');

var _http2 = _interopRequireDefault(_http);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// /src/util/__tests__/apiCaller.spec.js


// import callApi, { API_URL } from '../apiCaller';
var API_URL = 'http://localhost:8000';

function callApi(endpoint) {
    var method = arguments.length <= 1 || arguments[1] === undefined ? 'get' : arguments[1];
    var body = arguments[2];

    return (0, _isomorphicFetch2.default)('http://localhost:8000/test').then(function (response) {
        if (response.status >= 400) {
            throw new Error("Bad response from server");
        }
        console.log(data);
        return response.json();
    }).then(function (data) {
        console.log(data);
    });
}

(0, _ava2.default)('method defaults to GET', function (t) {
    var reply = {
        message: "hello world from server"
    };

    var api = (0, _nock2.default)('http://localhost:8000').get("/test/").reply(200, reply);

    return callApi('test', {}).then(function (result) {
        console.log(result);
    });

    //     return http.get("http://javascriptplayground.com/test/", function(resp) {
    //       resp.on("end", function(data) {
    //       t.deepEqual(reply, data);
    //   });
    // });

});

// test('sends the body', t => {
//   const body = { id: 5 };
//   const reply = { foo: 'bar' };
//   nock(API_URL)
//     .post('/foo', body)
//     .reply(200, reply);
//   return callApi('foo', 'post', body).then(response => {
//     t.deepEqual(response, reply);
//   });
// });
//
// test('returns the error', t => {
//   const reply = { message: 'Errrrrrrrrr' };
//   nock(API_URL)
//     .get('/send_error')
//     .reply(500, reply);
//   return callApi('send_error').then(error => {
//     t.deepEqual(error, reply);
//   });
// });
//# sourceMappingURL=../../../node_modules/.cache/ava/3a2db42d6008f86b867da1a2ab70844b.js.map